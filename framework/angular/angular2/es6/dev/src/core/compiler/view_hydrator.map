{"version":3,"sources":["view_hydrator.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/view_hydrator.es6","sourcesContent":["import {Injectable, Inject, OpaqueToken, Injector} from 'angular2/di';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport * as eli from './element_injector';\nimport {isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport * as vcModule from './view_container';\nimport * as viewModule from './view';\nimport {BindingPropagationConfig, Locals} from 'angular2/change_detection';\n\nimport * as renderApi from 'angular2/src/render/api';\nimport {ViewFactory} from 'angular2/src/core/compiler/view_factory';\n\n/**\n * A dehydrated view is a state of the view that allows it to be moved around\n * the view tree, without incurring the cost of recreating the underlying\n * injectors and watch records.\n *\n * A dehydrated view has the following properties:\n *\n * - all element injectors are empty.\n * - all appInjectors are released.\n * - all viewcontainers are empty.\n * - all context locals are set to null.\n * - the view context is null.\n *\n * A call to hydrate/dehydrate is called whenever a view is attached/detached,\n * but it does not do the attach/detach itself.\n */\n@Injectable()\nexport class AppViewHydrator {\n  _renderer:renderApi.Renderer;\n  _viewFactory:ViewFactory;\n\n  constructor(renderer:renderApi.Renderer, viewFactory:ViewFactory) {\n    this._renderer = renderer;\n    this._viewFactory = viewFactory;\n  }\n\n  hydrateDynamicComponentView(location:eli.ElementRef,\n      componentView:viewModule.AppView, componentDirective:eli.DirectiveBinding, injector:Injector) {\n    var hostView = location.hostView;\n    var boundElementIndex = location.boundElementIndex;\n    var binder = hostView.proto.elementBinders[boundElementIndex];\n    if (!binder.hasDynamicComponent()) {\n      throw new BaseException(`There is no dynamic component directive at element ${boundElementIndex}`);\n    }\n    if (isPresent(hostView.componentChildViews[boundElementIndex])) {\n      throw new BaseException(`There already is a bound component at element ${boundElementIndex}`);\n    }\n    var hostElementInjector = hostView.elementInjectors[boundElementIndex];\n    if (isBlank(injector)) {\n      injector = hostElementInjector.getLightDomAppInjector();\n    }\n\n    // shadowDomAppInjector\n    var shadowDomAppInjector = this._createShadowDomAppInjector(componentDirective, injector);\n    // Needed to make rtts-assert happy in unit tests...\n    if (isBlank(shadowDomAppInjector)) {\n      shadowDomAppInjector = null;\n    }\n    // create component instance\n    var component = hostElementInjector.dynamicallyCreateComponent(componentDirective, shadowDomAppInjector);\n\n    // componentView\n    hostView.componentChildViews[boundElementIndex] = componentView;\n    hostView.changeDetector.addShadowDomChild(componentView.changeDetector);\n\n    // render views\n    var renderViewRefs = this._renderer.createDynamicComponentView(hostView.render, boundElementIndex, componentView.proto.render);\n\n    this._viewHydrateRecurse(\n      componentView, renderViewRefs, 0, shadowDomAppInjector, hostElementInjector, component, null\n    );\n  }\n\n  dehydrateDynamicComponentView(parentView:viewModule.AppView, boundElementIndex:number) {\n    throw new BaseException('Not yet implemented!');\n    // Something along these lines:\n    // var binder = parentView.proto.elementBinders[boundElementIndex];\n    // if (!binder.hasDynamicComponent()) {\n    //   throw new BaseException(`There is no dynamic component directive at element ${boundElementIndex}`);\n    // }\n    // var componentView = parentView.componentChildViews[boundElementIndex];\n    // if (isBlank(componentView)) {\n    //   throw new BaseException(`There is no bound component at element ${boundElementIndex}`);\n    // }\n    // this._viewDehydrateRecurse(componentView);\n    // parentView.changeDetector.removeShadowDomChild(componentView.changeDetector);\n    // this._renderer.destroyDynamicComponentChildView(parentView.render, boundElementIndex);\n    // parentView.componentChildViews[boundElementIndex] = null;\n  }\n\n  hydrateInPlaceHostView(parentComponentLocation:eli.ElementRef,\n      hostElementSelector, hostView:viewModule.AppView, injector:Injector) {\n    var parentRenderViewRef = null;\n    if (isPresent(parentComponentLocation)) {\n      var parentView = parentComponentLocation.hostView.componentChildViews[parentComponentLocation.boundElementIndex];\n      parentRenderViewRef = parentView.render;\n      parentView.changeDetector.addChild(hostView.changeDetector);\n      ListWrapper.push(parentView.imperativeHostViews, hostView);\n\n      if (isBlank(injector)) {\n        injector = parentComponentLocation.injector;\n      }\n    }\n\n    var binder = hostView.proto.elementBinders[0];\n    var shadowDomAppInjector = this._createShadowDomAppInjector(binder.componentDirective, injector);\n\n    var renderViewRefs = this._renderer.createInPlaceHostView(parentRenderViewRef, hostElementSelector, hostView.proto.render);\n\n    this._viewHydrateRecurse(\n      hostView, renderViewRefs, 0, shadowDomAppInjector, null, new Object(), null\n    );\n  }\n\n  dehydrateInPlaceHostView(parentComponentLocation:eli.ElementRef, hostView:viewModule.AppView) {\n    var parentRenderViewRef = null;\n    if (isPresent(parentComponentLocation)) {\n      var parentView = parentComponentLocation.hostView.componentChildViews[parentComponentLocation.boundElementIndex];\n      parentRenderViewRef = parentView.render;\n      ListWrapper.remove(parentView.imperativeHostViews, hostView);\n      parentView.changeDetector.removeChild(hostView.changeDetector);\n    }\n    var render = hostView.render;\n    this._viewDehydrateRecurse(hostView);\n    this._renderer.destroyInPlaceHostView(parentRenderViewRef, render);\n  }\n\n  hydrateViewInViewContainer(viewContainer:vcModule.ViewContainer, atIndex:number, view:viewModule.AppView, injector:Injector = null) {\n    if (!viewContainer.hydrated()) throw new BaseException(\n        'Cannot create views on a dehydrated ViewContainer');\n    if (isBlank(injector)) {\n      injector = viewContainer.elementInjector.getLightDomAppInjector();\n    }\n    var renderViewRefs = this._renderer.createViewInContainer(viewContainer.getRender(), atIndex, view.proto.render);\n    viewContainer.parentView.changeDetector.addChild(view.changeDetector);\n    this._viewHydrateRecurse(view, renderViewRefs, 0, injector, viewContainer.elementInjector.getHost(),\n      viewContainer.parentView.context, viewContainer.parentView.locals);\n  }\n\n  dehydrateViewInViewContainer(viewContainer:vcModule.ViewContainer, atIndex:number, view:viewModule.AppView) {\n    view.changeDetector.remove();\n    this._viewDehydrateRecurse(view);\n    this._renderer.destroyViewInContainer(viewContainer.getRender(), atIndex);\n  }\n\n  _viewHydrateRecurse(\n      view:viewModule.AppView,\n      renderComponentViewRefs:List<renderApi.ViewRef>,\n      renderComponentIndex:number,\n      appInjector: Injector, hostElementInjector: eli.ElementInjector,\n      context: Object, locals:Locals):number {\n    if (view.hydrated()) throw new BaseException('The view is already hydrated.');\n    view.viewHydrator = this;\n    view.render = renderComponentViewRefs[renderComponentIndex++];\n\n    view.context = context;\n    view.locals.parent = locals;\n\n    var binders = view.proto.elementBinders;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        shadowDomAppInjector = this._createShadowDomAppInjector(componentDirective, appInjector);\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = view.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, hostElementInjector, shadowDomAppInjector, view.preBuiltObjects[i]);\n        this._setUpEventEmitters(view, elementInjector, i);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          view.locals.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          view.locals.set(exportImplicitName, elementInjector.getNgElement().domElement);\n        }\n      }\n\n      if (binders[i].hasStaticComponent()) {\n        renderComponentIndex = this._viewHydrateRecurse(\n          view.componentChildViews[i],\n          renderComponentViewRefs,\n          renderComponentIndex,\n          shadowDomAppInjector,\n          elementInjector,\n          elementInjector.getComponent(),\n          null\n        );\n      }\n    }\n    view.changeDetector.hydrate(view.context, view.locals, view);\n    view.renderer.setEventDispatcher(view.render, view);\n    return renderComponentIndex;\n  }\n\n  _setUpEventEmitters(view:viewModule.AppView, elementInjector:eli.ElementInjector, boundElementIndex:number) {\n    var emitters = elementInjector.getEventEmitterAccessors();\n    for(var directiveIndex = 0; directiveIndex < emitters.length; ++directiveIndex) {\n      var directiveEmitters = emitters[directiveIndex];\n      var directive = elementInjector.getDirectiveAtIndex(directiveIndex);\n\n      for (var eventIndex = 0; eventIndex < directiveEmitters.length; ++eventIndex) {\n        var eventEmitterAccessor = directiveEmitters[eventIndex];\n        eventEmitterAccessor.subscribe(view, boundElementIndex, directive);\n      }\n    }\n  }\n\n  /**\n   * This should only be called by View or ViewContainer.\n   */\n  _viewDehydrateRecurse(view:viewModule.AppView) {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < view.componentChildViews.length; i++) {\n      var componentView = view.componentChildViews[i];\n      if (isPresent(componentView)) {\n        this._viewDehydrateRecurse(componentView);\n        var binder = view.proto.elementBinders[i];\n        if (binder.hasDynamicComponent()) {\n          view.changeDetector.removeShadowDomChild(componentView.changeDetector);\n          view.componentChildViews[i] = null;\n          this._viewFactory.returnView(componentView);\n        }\n      }\n    }\n\n    // imperativeHostViews\n    for (var i = 0; i < view.imperativeHostViews.length; i++) {\n      var hostView = view.imperativeHostViews[i];\n      this._viewDehydrateRecurse(hostView);\n      view.changeDetector.removeChild(hostView.changeDetector);\n      this._viewFactory.returnView(hostView);\n    }\n    view.imperativeHostViews = [];\n\n    // elementInjectors\n    for (var i = 0; i < view.elementInjectors.length; i++) {\n      if (isPresent(view.elementInjectors[i])) {\n        view.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewContainers\n    if (isPresent(view.viewContainers)) {\n      for (var i = 0; i < view.viewContainers.length; i++) {\n        var vc = view.viewContainers[i];\n        if (isPresent(vc)) {\n          this._viewContainerDehydrateRecurse(vc);\n        }\n      }\n    }\n\n    view.render = null;\n\n    if (isPresent(view.locals)) {\n      view.locals.clearValues();\n    }\n    view.context = null;\n    view.changeDetector.dehydrate();\n  }\n\n  _createShadowDomAppInjector(componentDirective, appInjector) {\n    var shadowDomAppInjector = null;\n\n    // shadowDomAppInjector\n    var injectables = componentDirective.resolvedInjectables;\n    if (isPresent(injectables)) {\n      shadowDomAppInjector = appInjector.createChildFromResolved(injectables);\n    } else {\n      shadowDomAppInjector = appInjector;\n    }\n    return shadowDomAppInjector;\n  }\n\n  /**\n   * This should only be called by View or ViewContainer.\n   */\n  _viewContainerDehydrateRecurse(viewContainer:vcModule.ViewContainer) {\n    for (var i=0; i<viewContainer.length; i++) {\n      var view = viewContainer.get(i);\n      view.changeDetector.remove();\n      this._viewDehydrateRecurse(view);\n    }\n    // Note: We don't call clear here,\n    // as we don't want to change the render side\n    // as the render side does its own recursion.\n    viewContainer.internalClearWithoutRender();\n  }\n\n}\n"]}